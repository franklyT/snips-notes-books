Challenge: https://www.codewars.com/kata/55c04b4cc56a697bb0000048

/* Complete the function scramble(str1, str2) that returns true if a portion of str1 characters can be rearranged to match str2, otherwise returns false.

Notes:

Only lower case letters will be used (a-z). No punctuation or digits will be included.
Performance needs to be considered
Input strings s1 and s2 are null terminated.
Examples
scramble('rkqodlw', 'world') ==> True
scramble('cedewaraaossoqqyt', 'codewars') ==> True
scramble('katas', 'steak') ==> False

I wanted to challenge myself here and avoid regex. I found the big O of this test challenging, and it took many refactors to get the fastest code I could produce without excessively googling for answers. */

function scramble(str1, str2) {
let s = str1.split(''), t = str2.split(''), q;

for (q in t) {
  if ( s.includes(t[q]) ) {
  } else {return false}
  if ( (s.filter(b => b == t[q]).length) < (t.filter(c => c == t[q]).length) ) {
  return false;
}}
  return true;
}


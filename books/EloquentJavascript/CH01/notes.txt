"You can read data, modify data, create new data—but that which isn’t data cannot be mentioned" (I don't really like this phrasing, it could be confusing to some people, also probably should have edited to introduce binary in an explicit context)

"The important thing is to be aware of it and treat fractional digital numbers as approximations, not as precise values."

"These rules of precedence are not something you should worry about. When in doubt, just add parentheses."

"You’ll also often see [the %] operator referred to as modulo" (but it's not modulo, which can cause problems if you think of it as such)

- Template literals: eg. `this is a template literal referencing an integer stored as ${x + 1}`

- binary vs unary operators e.g. -20 (unary) 2 - 2 (binary)

- || lowest precedence, then &&, then comparison operators, then the 

- ternary conditional operator: left is true, right is false

- automatic type conversion (oh, no - basically use type safe operators)

- using || to create replacement values

- short-circuit evaluation (left to right, rest is escaped)
